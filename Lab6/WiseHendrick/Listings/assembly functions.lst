


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             my_fancy_asm_code, CODE, READON
LY 
                                                            ; Define the progra
                                                            m area
    2 00000000         
    3 00000000         ; Export functions defined in this file. These functions
                        need to be declared 
    4 00000000         ; in the file calling them.
    5 00000000                 EXPORT           task10
    6 00000000                 EXPORT           task11
    7 00000000                 EXPORT           task12
    8 00000000                 EXPORT           task13
    9 00000000                 EXPORT           task14
   10 00000000                 EXPORT           task15
   11 00000000         
   12 00000000                 IMPORT           gPtrArray10a
   13 00000000                 IMPORT           gPtrArray11a
   14 00000000                 IMPORT           gPtrArray12a
   15 00000000                 IMPORT           gPtrArray13a
   16 00000000                 IMPORT           gPtrArray14a
   17 00000000                 IMPORT           gPtrArray15a
   18 00000000                 IMPORT           gVar1
   19 00000000         
   20 00000000                 ALIGN                        ; Align the data in
                                                             the boundary of 4 
                                                            bytes. 
   21 00000000         
   22 00000000         task10  PROC
   23 00000000 F04F 0200       MOV              r2, #0      ; variable (int) i
   24 00000004         task10_loop
   25 00000004 428A            CMP              r2, r1      ; test = r2 - r1
   26 00000006 DA07            BGE              task10_end  ; if test >= 0, the
                                                            n branch to task10_
                                                            end    
   27 00000008 EA4F 0382       MOV              r3, r2, LSL #2 ; r3 <- r2 * 4
   28 0000000C F1A3 030F       SUB              r3, #15     ; r3 <- r3 - 15
   29 00000010 5483            STRB             r3, [r0, r2] ; r3 -> mem[r0 + r
                                                            2] or r3 -> mem[r0 
                                                            + i]
   30 00000012 F102 0201       ADD              r2, #1      ; r2 <- r2 + 1
   31 00000016 E7F5            B                task10_loop ; branch to task10_
                                                            loop
   32 00000018         task10_end
   33 00000018 4770            BX               lr          ; return
   34 0000001A                 ENDP
   35 0000001A         
   36 0000001A         task11  PROC
   37 0000001A F04F 0200       MOV              r2, #0      ; variable (int) i
   38 0000001E         task11_loop
   39 0000001E 428A            CMP              r2, r1      ; test = r2 - r1
   40 00000020 DA07            BGE              task11_end  ; if test >= 0, the
                                                            n branch to task11_
                                                            end    
   41 00000022 EA4F 1342       MOV              r3, r2, LSL #5 ; r3 = r2 * 32
   42 00000026 F103 0302       ADD              r3, #2      ; r3 += 2
   43 0000002A 5483            STRB             r3, [r0, r2] ; gPtrArray11a[i] 
                                                            = r3
   44 0000002C F102 0201       ADD              r2, #1      ; i++
   45 00000030 E7F5            B                task11_loop ; branch to task11_



ARM Macro Assembler    Page 2 


                                                            loop
   46 00000032         task11_end
   47 00000032 4770            BX               lr
   48 00000034                 ENDP
   49 00000034         
   50 00000034         task12  PROC
   51 00000034 B530            PUSH             {r4-r5, lr}
   52 00000036 F04F 0400       MOV              r4, #0
   53 0000003A         task12_loop
   54 0000003A 4294            CMP              r4, r2      ; test i
   55 0000003C DA0C            BGE              task12_end  ; test i
   56 0000003E 5705            LDRSB            r5, [r0, r4] ; r5 = gPtrArray10
                                                            a[i]
   57 00000040 F04F 030A       LDR              r3, =10     ; r3 = 10;
   58 00000044 EBA3 0305       SUB              r3, r5      ; r3 -= r5
   59 00000048 F821 3014       STRH             r3, [r1, r4, LSL #1] ; gPtrArra
                                                            y12a[2*i] = r3
   60 0000004C F105 0501       ADD              r5, #1      ; r5++
   61 00000050 5505            STRB             r5, [r0, r4] ; gPtrArray10a[i] 
                                                            = r5
   62 00000052 F104 0401       ADD              r4, #1      ; i++
   63 00000056 E7F0            B                task12_loop
   64 00000058         task12_end
   65 00000058 BD30            POP              {r4-r5, pc} ; Pop lr to pc, whi
                                                            ch is the same as B
                                                            X lr.
   66 0000005A                 ENDP
   67 0000005A         
   68 0000005A         task13  PROC
   69 0000005A B530            PUSH             {r4-r5, lr}
   70 0000005C F1A2 0201       SUB              r2, #1
   71 00000060 F04F 0300       MOV              r3, #0
   72 00000064         task13_loop
   73 00000064 4293            CMP              r3, r2      ; check i
   74 00000066 DA09            BGE              task13_end  ; check i
   75 00000068 7804            LDRB             r4, [r0]    ; r4 = gPtrArray11a
                                                            
   76 0000006A 7845            LDRB             r5, [r0, #1] ; r5 = gPtrArray11
                                                            a + 1
   77 0000006C 442C            ADD              r4, r5      ; r4 += r5
   78 0000006E F821 4013       STRH             r4, [r1, r3, LSL #1] ; gPtrArra
                                                            y13a[2 * i] = r4
   79 00000072 F100 0001       ADD              r0, #1      ; gPtrArray11a ++
   80 00000076 F103 0301       ADD              r3, #1      ; i++
   81 0000007A E7F3            B                task13_loop
   82 0000007C         task13_end
   83 0000007C BD30            POP              {r4-r5, pc}
   84 0000007E                 ENDP
   85 0000007E         
   86 0000007E         task14  PROC
   87 0000007E B530            PUSH             {r4-r5, lr}
   88 00000080 F1A2 0201       SUB              r2, #1
   89 00000084 F04F 0300       MOV              r3, #0
   90 00000088         task14_loop
   91 00000088 4293            CMP              r3, r2      ; check i
   92 0000008A DA0A            BGE              task14_end  ; Check i
   93 0000008C F9B0 4000       LDRSH            r4, [r0]    ; r4 = gPtrArray12a
                                                            
   94 00000090 F930 5F02       LDRSH            r5, [r0, #2]! ; r5 = *(++gPtrAr



ARM Macro Assembler    Page 3 


                                                            ray12a)
   95 00000094 EB14 04C5       ADDS             r4, r5, LSL #3 ; r4 += 8 * r5
   96 00000098 F841 4023       STR              r4, [r1, r3, LSL #2] ; gPtrArra
                                                            y14a[2*i] = r4 
   97 0000009C F103 0301       ADD              r3, #1      ; i++
   98 000000A0 E7F2            B                task14_loop
   99 000000A2         task14_end
  100 000000A2 BD30            POP              {r4-r5, pc}
  101 000000A4                 ENDP
  102 000000A4         
  103 000000A4         task15  PROC
  104 000000A4 B530            PUSH             {r4-r5, lr}
  105 000000A6 F1A2 0201       SUB              r2, #1
  106 000000AA F04F 0300       MOV              r3, #0
  107 000000AE         task15_loop
  108 000000AE 4293            CMP              r3, r2      ; check i
  109 000000B0 DA0A            BGE              task15_end  ; check i
  110 000000B2 F830 4B02       LDRH             r4, [r0], #2 ; r4 = *(gPtrArray
                                                            13a++)
  111 000000B6 8805            LDRH             r5, [r0]    ; r5 = *gPtrArray13
                                                            a
  112 000000B8 EA4F 1505       LSL              r5, #4      ; r5 *= 16
  113 000000BC 4425            ADD              r5, r4      ; r5 += r4
  114 000000BE F841 5023       STR              r5, [r1 , r3, LSL #2] ; gPtrArr
                                                            ay15a[i] = r5;
  115 000000C2 F103 0301       ADD              r3, #1      ; i++
  116 000000C6 E7F2            B                task15_loop
  117 000000C8         task15_end
  118 000000C8 BD30            POP              {r4-r5, pc}
  119 000000CA                 ENDP
  120 000000CA         
  121 000000CA                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=".\objects\assembly functions.d" -o".\objects\assembly function
s.o" -I.\RTE\_Target---sim -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Inc
lude -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\Device\ARM\ARMCM4\Include --predefin
e="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 527" --predefine="_RTE_ S
ETA 1" --predefine="ARMCM4_FP SETA 1" --list=.\listings\assembly functions.lst 
"assembly functions.s"



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

my_fancy_asm_code 00000000

Symbol: my_fancy_asm_code
   Definitions
      At line 1 in file assembly
   Uses
      None
Comment: my_fancy_asm_code unused
task10 00000000

Symbol: task10
   Definitions
      At line 22 in file assembly
   Uses
      At line 5 in file assembly
Comment: task10 used once
task10_end 00000018

Symbol: task10_end
   Definitions
      At line 32 in file assembly
   Uses
      At line 26 in file assembly
Comment: task10_end used once
task10_loop 00000004

Symbol: task10_loop
   Definitions
      At line 24 in file assembly
   Uses
      At line 31 in file assembly
Comment: task10_loop used once
task11 0000001A

Symbol: task11
   Definitions
      At line 36 in file assembly
   Uses
      At line 6 in file assembly
Comment: task11 used once
task11_end 00000032

Symbol: task11_end
   Definitions
      At line 46 in file assembly
   Uses
      At line 40 in file assembly
Comment: task11_end used once
task11_loop 0000001E

Symbol: task11_loop
   Definitions
      At line 38 in file assembly
   Uses
      At line 45 in file assembly
Comment: task11_loop used once
task12 00000034

Symbol: task12



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 50 in file assembly
   Uses
      At line 7 in file assembly
Comment: task12 used once
task12_end 00000058

Symbol: task12_end
   Definitions
      At line 64 in file assembly
   Uses
      At line 55 in file assembly
Comment: task12_end used once
task12_loop 0000003A

Symbol: task12_loop
   Definitions
      At line 53 in file assembly
   Uses
      At line 63 in file assembly
Comment: task12_loop used once
task13 0000005A

Symbol: task13
   Definitions
      At line 68 in file assembly
   Uses
      At line 8 in file assembly
Comment: task13 used once
task13_end 0000007C

Symbol: task13_end
   Definitions
      At line 82 in file assembly
   Uses
      At line 74 in file assembly
Comment: task13_end used once
task13_loop 00000064

Symbol: task13_loop
   Definitions
      At line 72 in file assembly
   Uses
      At line 81 in file assembly
Comment: task13_loop used once
task14 0000007E

Symbol: task14
   Definitions
      At line 86 in file assembly
   Uses
      At line 9 in file assembly
Comment: task14 used once
task14_end 000000A2

Symbol: task14_end
   Definitions
      At line 99 in file assembly
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 92 in file assembly
Comment: task14_end used once
task14_loop 00000088

Symbol: task14_loop
   Definitions
      At line 90 in file assembly
   Uses
      At line 98 in file assembly
Comment: task14_loop used once
task15 000000A4

Symbol: task15
   Definitions
      At line 103 in file assembly
   Uses
      At line 10 in file assembly
Comment: task15 used once
task15_end 000000C8

Symbol: task15_end
   Definitions
      At line 117 in file assembly
   Uses
      At line 109 in file assembly
Comment: task15_end used once
task15_loop 000000AE

Symbol: task15_loop
   Definitions
      At line 107 in file assembly
   Uses
      At line 116 in file assembly
Comment: task15_loop used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

gPtrArray10a 00000000

Symbol: gPtrArray10a
   Definitions
      At line 12 in file assembly
   Uses
      None
Comment: gPtrArray10a unused
gPtrArray11a 00000000

Symbol: gPtrArray11a
   Definitions
      At line 13 in file assembly
   Uses
      None
Comment: gPtrArray11a unused
gPtrArray12a 00000000

Symbol: gPtrArray12a
   Definitions
      At line 14 in file assembly
   Uses
      None
Comment: gPtrArray12a unused
gPtrArray13a 00000000

Symbol: gPtrArray13a
   Definitions
      At line 15 in file assembly
   Uses
      None
Comment: gPtrArray13a unused
gPtrArray14a 00000000

Symbol: gPtrArray14a
   Definitions
      At line 16 in file assembly
   Uses
      None
Comment: gPtrArray14a unused
gPtrArray15a 00000000

Symbol: gPtrArray15a
   Definitions
      At line 17 in file assembly
   Uses
      None
Comment: gPtrArray15a unused
gVar1 00000000

Symbol: gVar1
   Definitions
      At line 18 in file assembly
   Uses
      None
Comment: gVar1 unused
7 symbols
361 symbols in table
