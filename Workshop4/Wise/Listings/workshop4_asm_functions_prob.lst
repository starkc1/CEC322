


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             my_fancy_asm_code, CODE, READON
LY
    2 00000000         
    3 00000000                 EXPORT           aTask1
    4 00000000                 EXPORT           aTask2
    5 00000000                 EXPORT           aTask3
    6 00000000                 EXPORT           aTask4
    7 00000000         
    8 00000000                 ALIGN
    9 00000000         
   10 00000000         
   11 00000000         ; extern void aTask1(int32_t *arr1, int32_t *arr2, int32
                       _t *arr3, uint32_t M);
   12 00000000         aTask1  PROC
   13 00000000 B570            PUSH             {r4-r6, lr}
   14 00000002 F04F 0400       MOV              r4, #0
   15 00000006 429C    aTask1_loop
                               CMP              r4, r3
   16 00000008 DA09            BGE              aTask1_end
   17 0000000A F850 5B04       LDR              r5, [r0], #4
   18 0000000E F851 6B04       LDR              r6, [r1], #4
   19 00000012 4435            ADD              r5, r6
   20 00000014 F842 5B04       STR              r5, [r2], #4
   21 00000018 F104 0401       ADD              r4, #1
   22 0000001C E7F3            B                aTask1_loop
   23 0000001E BD70    aTask1_end
                               POP              {r4-r6, pc}
   24 00000020                 ENDP
   25 00000020         
   26 00000020         ; extern void aTask2(int32_t *arr1, int32_t *arr2, int32
                       _t *arr3, uint32_t M_n);
   27 00000020         ; M_n = M | (n << 16)
   28 00000020         aTask2  PROC
   29 00000020 B5F0            PUSH             {r4-r7, lr}
   30 00000022 461F            MOV              r7, r3
   31 00000024 EA4F 4717       LSR              r7, #16
   32 00000028 EA4F 4303       LSL              r3, #16
   33 0000002C EA4F 4313       LSR              r3, #16
   34 00000030 F04F 0400       MOV              r4, #0
   35 00000034 429C    aTask2_loop
                               CMP              r4, r3
   36 00000036 DA0C            BGE              aTask2_end
   37 00000038 F850 5B04       LDR              r5, [r0], #4
   38 0000003C F851 6B04       LDR              r6, [r1], #4
   39 00000040 FB05 F506       MUL              r5, r6
   40 00000044 FA45 F507       ASR              r5, r7
   41 00000048 F842 5B04       STR              r5, [r2], #4
   42 0000004C F104 0401       ADD              r4, #1
   43 00000050 E7F0            B                aTask2_loop
   44 00000052 BDF0    aTask2_end
                               POP              {r4-r7, pc}
   45 00000054                 ENDP
   46 00000054         
   47 00000054         ; extern void aTask3(int32_t *arr1, int32_t *arr2, int32
                       _t *arr3, uint32_t M_n);
   48 00000054         ; M_n = M & (n << 16)
   49 00000054         aTask3  PROC
   50 00000054 B5F0            PUSH             {r4-r7, lr}
   51 00000056 461F            MOV              r7, r3



ARM Macro Assembler    Page 2 


   52 00000058 EA4F 4717       LSR              r7, #16
   53 0000005C EA4F 4303       LSL              r3, #16
   54 00000060 EA4F 4313       LSR              r3, #16
   55 00000064 461C            MOV              r4, r3
   56 00000066 F850 5B04 
                       aTask3_loop
                               LDR              r5, [r0], #4
   57 0000006A F851 6B04       LDR              r6, [r1], #4
   58 0000006E FA05 F507       LSL              r5, r7
   59 00000072 FB95 F5F6       SDIV             r5, r6
   60 00000076 F842 5B04       STR              r5, [r2], #4
   61 0000007A F1A4 0401       SUB              r4, #1
   62 0000007E 2C00            CMP              r4, #0
   63 00000080 DCF1            BGT              aTask3_loop
   64 00000082 BDF0    aTask3_end
                               POP              {r4-r7, pc}
   65 00000084                 ENDP
   66 00000084         
   67 00000084         ; extern void aTask3(int32_t *arr1, int32_t *arr2, int32
                       _t *arr3, uint32_t M_n);
   68 00000084         ; M_n = M & (n << 16)
   69 00000084         aTask4  PROC
   70 00000084 E92D 41F0       PUSH             {r4-r8, lr}
   71 00000088 461F            MOV              r7, r3
   72 0000008A EA4F 4717       LSR              r7, #16
   73 0000008E EA4F 4303       LSL              r3, #16
   74 00000092 EA4F 4313       LSR              r3, #16
   75 00000096 F04F 0400       MOV              r4, #0
   76 0000009A 429C    aTask4_loop
                               CMP              r4, r3
   77 0000009C DA0C            BGE              aTask4_end
   78 0000009E F850 5B04       LDR              r5, [r0], #4
   79 000000A2 F851 6B04       LDR              r6, [r1], #4
   80 000000A6 FB95 F8F6       SDIV             r8, r5, r6
   81 000000AA FB06 5518       MLS              r5, r6, r8, r5
   82 000000AE F842 5B04       STR              r5, [r2], #4
   83 000000B2 F104 0401       ADD              r4, #1
   84 000000B6 E7F0            B                aTask4_loop
   85 000000B8 E8BD 81F0 
                       aTask4_end
                               POP              {r4-r8, pc}
   86 000000BC                 ENDP
   87 000000BC         
   88 000000BC         
   89 000000BC         
   90 000000BC                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --depend=.
\objects\workshop4_asm_functions_prob.d -o.\objects\workshop4_asm_functions_pro
b.o -I.\RTE\_prob -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:
\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\Device\ARM\ARMCM4\Include --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 527" --predefine="_RTE_ SETA 1" --
predefine="ARMCM4_FP SETA 1" --list=.\listings\workshop4_asm_functions_prob.lst
 source\workshop4_asm_functions_prob.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

aTask1 00000000

Symbol: aTask1
   Definitions
      At line 12 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 3 in file source\workshop4_asm_functions_prob.s
Comment: aTask1 used once
aTask1_end 0000001E

Symbol: aTask1_end
   Definitions
      At line 23 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 16 in file source\workshop4_asm_functions_prob.s
Comment: aTask1_end used once
aTask1_loop 00000006

Symbol: aTask1_loop
   Definitions
      At line 15 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 22 in file source\workshop4_asm_functions_prob.s
Comment: aTask1_loop used once
aTask2 00000020

Symbol: aTask2
   Definitions
      At line 28 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 4 in file source\workshop4_asm_functions_prob.s
Comment: aTask2 used once
aTask2_end 00000052

Symbol: aTask2_end
   Definitions
      At line 44 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 36 in file source\workshop4_asm_functions_prob.s
Comment: aTask2_end used once
aTask2_loop 00000034

Symbol: aTask2_loop
   Definitions
      At line 35 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 43 in file source\workshop4_asm_functions_prob.s
Comment: aTask2_loop used once
aTask3 00000054

Symbol: aTask3
   Definitions
      At line 49 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 5 in file source\workshop4_asm_functions_prob.s
Comment: aTask3 used once
aTask3_end 00000082

Symbol: aTask3_end



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 64 in file source\workshop4_asm_functions_prob.s
   Uses
      None
Comment: aTask3_end unused
aTask3_loop 00000066

Symbol: aTask3_loop
   Definitions
      At line 56 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 63 in file source\workshop4_asm_functions_prob.s
Comment: aTask3_loop used once
aTask4 00000084

Symbol: aTask4
   Definitions
      At line 69 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 6 in file source\workshop4_asm_functions_prob.s
Comment: aTask4 used once
aTask4_end 000000B8

Symbol: aTask4_end
   Definitions
      At line 85 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 77 in file source\workshop4_asm_functions_prob.s
Comment: aTask4_end used once
aTask4_loop 0000009A

Symbol: aTask4_loop
   Definitions
      At line 76 in file source\workshop4_asm_functions_prob.s
   Uses
      At line 84 in file source\workshop4_asm_functions_prob.s
Comment: aTask4_loop used once
my_fancy_asm_code 00000000

Symbol: my_fancy_asm_code
   Definitions
      At line 1 in file source\workshop4_asm_functions_prob.s
   Uses
      None
Comment: my_fancy_asm_code unused
13 symbols
348 symbols in table
