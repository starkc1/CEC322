


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             asm_code, CODE, READONLY ; Defi
                                                            ne the program area
                                                            
    2 00000000         
    3 00000000         ; Export functions defined in this file. These functions
                        need to be declared
    4 00000000         ; in the file calling them.
    5 00000000                 EXPORT           task1
    6 00000000                 EXPORT           task2
    7 00000000                 EXPORT           task3
    8 00000000                 EXPORT           task4
    9 00000000                 EXPORT           task5
   10 00000000                 EXPORT           task6
   11 00000000                 EXPORT           task7
   12 00000000                 EXPORT           task8
   13 00000000                 EXPORT           task9
   14 00000000                 EXPORT           task10
   15 00000000         
   16 00000000         
   17 00000000                 IMPORT           input_array
   18 00000000                 IMPORT           output_array
   19 00000000         
   20 00000000                 ALIGN                        ; Align the data in
                                                             the boundary of 4 
                                                            bytes.
   21 00000000         
   22 00000000         
   23 00000000         task1   PROC
   24 00000000 4288            CMP              r0, r1
   25 00000002 DCFF            BGT              task1_true
   26 00000004         task1_true
   27 00000004 EA4F 0090       LSR              r0, #2
   28 00000008 F100 0001       ADD              r0, #1
   29 0000000C         task1_end
   30 0000000C 4770            BX               lr
   31 0000000E                 ENDP
   32 0000000E         
   33 0000000E         
   34 0000000E         
   35 0000000E         task2   PROC
   36 0000000E 2914            CMP              r1, #20
   37 00000010 DD02            BLE              task2_true
   38 00000012 DCFF            BGT              task2_false
   39 00000014         task2_false
   40 00000014 2919            CMP              r1, #25
   41 00000016 DAFF            BGE              task2_true
   42 00000018         task2_true
   43 00000018 EA4F 0040       LSL              r0, #1
   44 0000001C F1A0 0001       SUB              r0, #1
   45 00000020         task2_end
   46 00000020 4770            BX               lr
   47 00000022                 ENDP
   48 00000022         
   49 00000022         
   50 00000022         task3   PROC
   51 00000022 EBB0 0FC1       CMP              r0, r1, LSL #3
   52 00000026 D002            BEQ              task3_true
   53 00000028         task3_false
   54 00000028 F1A1 0104       SUB              r1, #4



ARM Macro Assembler    Page 2 


   55 0000002C E001            B                task3_end
   56 0000002E         task3_true
   57 0000002E F1A1 010A       SUB              r1, #10
   58 00000032         task3_end
   59 00000032 4608            MOV              r0, r1
   60 00000034 4770            BX               lr
   61 00000036                 ENDP
   62 00000036         
   63 00000036         
   64 00000036         task4   PROC
   65 00000036 2914            CMP              r1, #20
   66 00000038 DD08            BLE              task4_true
   67 0000003A DCFF            BGT              task4_false
   68 0000003C         task4_false
   69 0000003C 2919            CMP              r1, #25
   70 0000003E DA05            BGE              task4_true
   71 00000040 DBFF            BLT              task4_else
   72 00000042         task4_else
   73 00000042 F1A0 0001       SUB              r0, #1
   74 00000046 EA4F 1000       LSL              r0, #4
   75 0000004A E004            B                task4_end
   76 0000004C         task4_true
   77 0000004C F100 0001       ADD              r0, #1
   78 00000050 EA4F 00C0       LSL              r0, #3
   79 00000054 E7FF            B                task4_end
   80 00000056         task4_end
   81 00000056 4770            BX               lr
   82 00000058                 ENDP
   83 00000058         
   84 00000058         
   85 00000058         
   86 00000058         task5   PROC
   87 00000058 B510            PUSH             {r4,lr}
   88 0000005A F04F 0200       MOV              r2, #0      ;sum
   89 0000005E F04F 0300       MOV              r3, #0      ;i
   90 00000062 F04F 0400       MOV              r4, #0      ;temp i
   91 00000066         task5_loop
   92 00000066 4283            CMP              r3, r0
   93 00000068 DA08            BGE              task5_end
   94 0000006A 461C            MOV              r4, r3
   95 0000006C F104 0402       ADD              r4, #2
   96 00000070 EA4F 04C4       LSL              r4, #3
   97 00000074 4422            ADD              r2, r4
   98 00000076 F103 0301       ADD              r3, #1
   99 0000007A E7F4            B                task5_loop
  100 0000007C         task5_end
  101 0000007C 4610            MOV              r0, r2
  102 0000007E BD10            POP              {r4, pc}
  103 00000080 4770            BX               lr
  104 00000082                 ENDP
  105 00000082         
  106 00000082         
  107 00000082         
  108 00000082         task6   PROC
  109 00000082 B510            PUSH             {r4, lr}
  110 00000084 F04F 0200       MOV              r2, #0      ;sum6
  111 00000088 F04F 0300       MOV              r3, #0      ;i
  112 0000008C         task6_loop
  113 0000008C 428B            CMP              r3, r1



ARM Macro Assembler    Page 3 


  114 0000008E DA07            BGE              task6_end
  115 00000090 F850 4B04       LDR              r4, [r0], #4
  116 00000094 F004 040F       AND              r4, #0x0F
  117 00000098 4422            ADD              r2, r4
  118 0000009A F103 0301       ADD              r3, #1
  119 0000009E E7F5            B                task6_loop
  120 000000A0         task6_end
  121 000000A0 4610            MOV              r0, r2
  122 000000A2 BD10            POP              {r4, pc}
  123 000000A4 4770            BX               lr
  124 000000A6                 ENDP
  125 000000A6         
  126 000000A6         
  127 000000A6         
  128 000000A6         task7   PROC
  129 000000A6 B510            PUSH             {r4, lr}
  130 000000A8 F04F 0200       MOV              r2, #0      ;sum7
  131 000000AC F04F 0300       MOV              r3, #0      ;i
  132 000000B0 F04F 0400       MOV              r4, #0      ;temp i
  133 000000B4         task7_while
  134 000000B4 4283            CMP              r3, r0
  135 000000B6 DA08            BGE              task7_end
  136 000000B8 461C            MOV              r4, r3
  137 000000BA EA4F 0484       LSL              r4, #2
  138 000000BE F044 040F       ORR              r4, #0x0F
  139 000000C2 4422            ADD              r2, r4
  140 000000C4 F103 0301       ADD              r3, #1
  141 000000C8 E7F4            B                task7_while
  142 000000CA         task7_end
  143 000000CA 4610            MOV              r0, r2
  144 000000CC BD10            POP              {r4, pc}
  145 000000CE 4770            BX               lr
  146 000000D0                 ENDP
  147 000000D0         
  148 000000D0         
  149 000000D0         
  150 000000D0         task8   PROC
  151 000000D0 F04F 0200       MOV              r2, #0      ;sum8
  152 000000D4 F04F 0300       MOV              r3, #0      ;temp
  153 000000D8         task8_while
  154 000000D8 2900            CMP              r1, #0
  155 000000DA DD05            BLE              task8_end
  156 000000DC F1A1 0101       SUB              r1, #1
  157 000000E0 F850 3021       LDR              r3, [r0, r1, LSL #2]
  158 000000E4 441A            ADD              r2, r3
  159 000000E6 E7F7            B                task8_while
  160 000000E8         task8_end
  161 000000E8 4610            MOV              r0, r2
  162 000000EA 4770            BX               lr
  163 000000EC                 ENDP
  164 000000EC         
  165 000000EC         
  166 000000EC         
  167 000000EC         task9   PROC
  168 000000EC B510            PUSH             {r4, lr}
  169 000000EE F04F 0200       MOV              r2, #0      ;sum9
  170 000000F2 F04F 0300       MOV              r3, #0      ;i
  171 000000F6 F04F 0400       MOV              r4, #0      ;temp i
  172 000000FA         task9_loop



ARM Macro Assembler    Page 4 


  173 000000FA EA4F 0484       LSL              r4, #2
  174 000000FE F044 040F       ORR              r4, #0x0F
  175 00000102 4422            ADD              r2, r4
  176 00000104 F103 0301       ADD              r3, #1
  177 00000108 461C            MOV              r4, r3
  178 0000010A 4283            CMP              r3, r0
  179 0000010C DBF5            BLT              task9_loop
  180 0000010E         task9_end
  181 0000010E 4610            MOV              r0, r2
  182 00000110 BD10            POP              {r4, pc}
  183 00000112 4770            BX               lr
  184 00000114                 ENDP
  185 00000114         
  186 00000114         
  187 00000114         
  188 00000114         task10  PROC
  189 00000114 B510            PUSH             {r4, lr}
  190 00000116 F04F 0200       MOV              r2, #0      ;sum9
  191 0000011A F04F 0300       MOV              r3, #0      ;temp
  192 0000011E F04F 0400       MOV              r4, #0      ;temp
  193 00000122         task10_loop
  194 00000122 2900            CMP              r1, #0
  195 00000124 DD07            BLE              task10_end
  196 00000126 F850 3B04       LDR              r3, [r0], #4
  197 0000012A EA4F 0343       LSL              r3, #1
  198 0000012E 441A            ADD              r2, r3
  199 00000130 F1A1 0101       SUB              r1, #1
  200 00000134 E7F5            B                task10_loop
  201 00000136         task10_end
  202 00000136 4610            MOV              r0, r2
  203 00000138 BD10            POP              {r4, pc}
  204 0000013A 4770            BX               lr
  205 0000013C                 ENDP
                       
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\asm_code.d -o.\objects\asm_code.o -I.\RTE\_Target---s
im -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PA
CK\ARM\CMSIS\5.4.0\Device\ARM\ARMCM4\Include --predefine="__EVAL SETA 1" --pred
efine="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --predefine="ARMC
M4_FP SETA 1" --list=.\listings\asm_code.lst asm_code.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_code 00000000

Symbol: asm_code
   Definitions
      At line 1 in file asm_code.s
   Uses
      None
Comment: asm_code unused
task1 00000000

Symbol: task1
   Definitions
      At line 23 in file asm_code.s
   Uses
      At line 5 in file asm_code.s
Comment: task1 used once
task10 00000114

Symbol: task10
   Definitions
      At line 188 in file asm_code.s
   Uses
      At line 14 in file asm_code.s
Comment: task10 used once
task10_end 00000136

Symbol: task10_end
   Definitions
      At line 201 in file asm_code.s
   Uses
      At line 195 in file asm_code.s
Comment: task10_end used once
task10_loop 00000122

Symbol: task10_loop
   Definitions
      At line 193 in file asm_code.s
   Uses
      At line 200 in file asm_code.s
Comment: task10_loop used once
task1_end 0000000C

Symbol: task1_end
   Definitions
      At line 29 in file asm_code.s
   Uses
      None
Comment: task1_end unused
task1_true 00000004

Symbol: task1_true
   Definitions
      At line 26 in file asm_code.s
   Uses
      At line 25 in file asm_code.s
Comment: task1_true used once
task2 0000000E

Symbol: task2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 35 in file asm_code.s
   Uses
      At line 6 in file asm_code.s
Comment: task2 used once
task2_end 00000020

Symbol: task2_end
   Definitions
      At line 45 in file asm_code.s
   Uses
      None
Comment: task2_end unused
task2_false 00000014

Symbol: task2_false
   Definitions
      At line 39 in file asm_code.s
   Uses
      At line 38 in file asm_code.s
Comment: task2_false used once
task2_true 00000018

Symbol: task2_true
   Definitions
      At line 42 in file asm_code.s
   Uses
      At line 37 in file asm_code.s
      At line 41 in file asm_code.s

task3 00000022

Symbol: task3
   Definitions
      At line 50 in file asm_code.s
   Uses
      At line 7 in file asm_code.s
Comment: task3 used once
task3_end 00000032

Symbol: task3_end
   Definitions
      At line 58 in file asm_code.s
   Uses
      At line 55 in file asm_code.s
Comment: task3_end used once
task3_false 00000028

Symbol: task3_false
   Definitions
      At line 53 in file asm_code.s
   Uses
      None
Comment: task3_false unused
task3_true 0000002E

Symbol: task3_true
   Definitions
      At line 56 in file asm_code.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 52 in file asm_code.s
Comment: task3_true used once
task4 00000036

Symbol: task4
   Definitions
      At line 64 in file asm_code.s
   Uses
      At line 8 in file asm_code.s
Comment: task4 used once
task4_else 00000042

Symbol: task4_else
   Definitions
      At line 72 in file asm_code.s
   Uses
      At line 71 in file asm_code.s
Comment: task4_else used once
task4_end 00000056

Symbol: task4_end
   Definitions
      At line 80 in file asm_code.s
   Uses
      At line 75 in file asm_code.s
      At line 79 in file asm_code.s

task4_false 0000003C

Symbol: task4_false
   Definitions
      At line 68 in file asm_code.s
   Uses
      At line 67 in file asm_code.s
Comment: task4_false used once
task4_true 0000004C

Symbol: task4_true
   Definitions
      At line 76 in file asm_code.s
   Uses
      At line 66 in file asm_code.s
      At line 70 in file asm_code.s

task5 00000058

Symbol: task5
   Definitions
      At line 86 in file asm_code.s
   Uses
      At line 9 in file asm_code.s
Comment: task5 used once
task5_end 0000007C

Symbol: task5_end
   Definitions
      At line 100 in file asm_code.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 93 in file asm_code.s
Comment: task5_end used once
task5_loop 00000066

Symbol: task5_loop
   Definitions
      At line 91 in file asm_code.s
   Uses
      At line 99 in file asm_code.s
Comment: task5_loop used once
task6 00000082

Symbol: task6
   Definitions
      At line 108 in file asm_code.s
   Uses
      At line 10 in file asm_code.s
Comment: task6 used once
task6_end 000000A0

Symbol: task6_end
   Definitions
      At line 120 in file asm_code.s
   Uses
      At line 114 in file asm_code.s
Comment: task6_end used once
task6_loop 0000008C

Symbol: task6_loop
   Definitions
      At line 112 in file asm_code.s
   Uses
      At line 119 in file asm_code.s
Comment: task6_loop used once
task7 000000A6

Symbol: task7
   Definitions
      At line 128 in file asm_code.s
   Uses
      At line 11 in file asm_code.s
Comment: task7 used once
task7_end 000000CA

Symbol: task7_end
   Definitions
      At line 142 in file asm_code.s
   Uses
      At line 135 in file asm_code.s
Comment: task7_end used once
task7_while 000000B4

Symbol: task7_while
   Definitions
      At line 133 in file asm_code.s
   Uses
      At line 141 in file asm_code.s
Comment: task7_while used once
task8 000000D0



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


Symbol: task8
   Definitions
      At line 150 in file asm_code.s
   Uses
      At line 12 in file asm_code.s
Comment: task8 used once
task8_end 000000E8

Symbol: task8_end
   Definitions
      At line 160 in file asm_code.s
   Uses
      At line 155 in file asm_code.s
Comment: task8_end used once
task8_while 000000D8

Symbol: task8_while
   Definitions
      At line 153 in file asm_code.s
   Uses
      At line 159 in file asm_code.s
Comment: task8_while used once
task9 000000EC

Symbol: task9
   Definitions
      At line 167 in file asm_code.s
   Uses
      At line 13 in file asm_code.s
Comment: task9 used once
task9_end 0000010E

Symbol: task9_end
   Definitions
      At line 180 in file asm_code.s
   Uses
      None
Comment: task9_end unused
task9_loop 000000FA

Symbol: task9_loop
   Definitions
      At line 172 in file asm_code.s
   Uses
      At line 179 in file asm_code.s
Comment: task9_loop used once
35 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

input_array 00000000

Symbol: input_array
   Definitions
      At line 17 in file asm_code.s
   Uses
      None
Comment: input_array unused
output_array 00000000

Symbol: output_array
   Definitions
      At line 18 in file asm_code.s
   Uses
      None
Comment: output_array unused
2 symbols
372 symbols in table
